import '../styles/globals.css'
import { LivepeerConfig } from '@livepeer/react'
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import { Inter } from '@next/font/google'
import Link from 'next/link'
import { WebBundlr } from "@bundlr-network/client"
import { MainContext } from '../context'
import { useState, useRef } from 'react'
import { providers, utils } from 'ethers'
import {
  createReactClient,
  studioProvider,
 } from '@livepeer/react';
 const client = createReactClient({
  provider: studioProvider({ apiKey: '9d7ca5da-f91c-40a7-83af-c94755fe73ff' }),
});

const inter = Inter({ subsets: ['latin'] })




export default function App({ Component, pageProps }) {
  const [bundlrInstance, setBundlrInstance] = useState()
  const [balance, setBalance] = useState()
  const bundlrRef = useRef()
  async function initialiseBundlr() {
    await window.ethereum.request({method: 'eth_requestAccounts'})
  
    const provider = new providers.Web3Provider(window.ethereum);
    await provider._ready()
  
    const bundlr = new WebBundlr("https://node1.bundlr.network", "matic", provider)
    await bundlr.ready()
    
    setBundlrInstance(bundlr)
    bundlrRef.current = bundlr
    fetchBalance()
  }

  async function fetchBalance() {
    const bal = await bundlrRef.current.getLoadedBalance()
    console.log('bal: ', utils.formatEther(bal.toString()))
    setBalance(utils.formatEther(bal.toString()))
  }
  return (
    <>
   
    <>
    <Head>
      <title>Create Next App</title>
      <meta name="description" content="Generated by create next app" />
      <meta name="viewport" content="width=device-width, initial-scale=1" />
      <link rel="icon" href="/favicon.ico" />
    </Head><main className={styles.main}>
          <div className={styles.description}>
            <Link href='/'>
            <p className={styles.logo}>
              LEARNING TUBE
            </p>
            </Link>
            <Link href='/liveclass'> <p>
              Live Classes
            </p></Link>
           
            <p>
              Lectures
            </p>

            <div>

              <a
                href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
                target="_blank"
                rel="noopener noreferrer"
              >
              </a>
              <Link href='/profile'>
                <p>
                  Profile
                </p>
              </Link>

            </div>
          </div>
          <LivepeerConfig client={client}>
      <MainContext.Provider value={{
        initialiseBundlr,
        bundlrInstance,
        balance,
        fetchBalance
      }}>
   


          <Component {...pageProps} />
          
          </MainContext.Provider>
          </LivepeerConfig>

          <div className={styles.footer1}>
            <a
              href="https://nextjs.org/docs?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
              className={styles.card}
              target="_blank"
              rel="noopener noreferrer"
            >

              <h4 className={styles.footer1}>
                LEARNGING TUBE @2023
              </h4>
              <p className={inter.className}>
                Copyright@2023.
              </p>
            </a>


          </div>
        </main>

      </></>
  ) 
}
